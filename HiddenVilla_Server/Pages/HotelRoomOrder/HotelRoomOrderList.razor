@page "/hotel-room-order"
@using Business.Repository.IRepository
@using Models
@using Radzen
@inject IRoomOrderDetailsRepository roomOrderDetailRepository
@inject IJSRuntime jsRuntime
@inject NavigationManager navigationManager
@attribute [Authorize(Roles = Common.SD.Role_Admin)]

@if (!IsLoading)
{
    <h4 class="card-title text-info">Hotel Room Orders</h4>

    <RadzenDataGrid AllowFiltering="true"
                    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive    "
                    AllowColumnResize="true"
                    FilterMode="FilterMode.Advanced"
                    PageSize="5"
                    AllowPaging="true"
                    AllowSorting="true"
                    Data="@HotelRoomOrders"
                    TItem="RoomOrderDetailsDTO"
                    ColumnWidth="200px">
        <Columns>
            <RadzenDataGridColumn TItem="RoomOrderDetailsDTO" Property="Name" Title="Customer Name" />
            <RadzenDataGridColumn TItem="RoomOrderDetailsDTO" Property="Phone" Title="Phone Number" />
            <RadzenDataGridColumn TItem="RoomOrderDetailsDTO" Property="Email" Title="Email" />
            <RadzenDataGridColumn TItem="RoomOrderDetailsDTO" Property="HotelRoomDTO.Name" Title="Room" />
            <RadzenDataGridColumn TItem="RoomOrderDetailsDTO" Property="Status" Title="Status" />
            <RadzenDataGridColumn TItem="RoomOrderDetailsDTO" Property="CheckInDate" Title="Check in Date" FormatString="{0:d}" />
            <RadzenDataGridColumn TItem="RoomOrderDetailsDTO" Property="Id" Title="">
                <Template Context="data">
                    <NavLink class="btn btn-primary" href="@($"hotel-room-order/details/{data.Id}")">Details</NavLink>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
}
else
{
    <p>Loading ...</p>
}

@code {
    private IEnumerable<RoomOrderDetailsDTO> HotelRoomOrders { get; set; } = new List<RoomOrderDetailsDTO>();
    private bool IsLoading { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;
        HotelRoomOrders = await roomOrderDetailRepository.GetAllRoomOrderDetails();

        IsLoading = false;
    }
}
